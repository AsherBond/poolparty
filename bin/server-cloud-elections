#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))
require "poolparty"

o = PoolParty::Optioner.new(ARGV) do |opts, optioner|
  opts.on('-n cloudname', '--name name', 'Start cloud by this name')    { |c| optioner.cloudname c }
  opts.on('-i num', '--num i', 'Instance number')    { |i| optioner.inst_num i.to_i }
end

vote_for = o.unflagged_args.shift || "none"

cld = ::PoolParty::Cloud::Cloud.load_from_json(ENV['CLOUDS_JSON_FILE'] || '/etc/poolparty/clouds.json')  #TODO: smarter option parser

case vote_for
when "expand"
  puts "Launching new instance"
  cld.launch_instance! do |node|
    dputs "Started node at #{node[:ip]}"
    ::PoolParty::Provision::BootStrapper.new( node[:ip], :cloud => cld )
    ::PoolParty::Provision::DrConfigure.new( node[:ip], :cloud => cld )
  end  

when "contract"
  last_instance_id = %x[server-list-active instance_id].split("\t").last
  cloud.terminate_instance!(:instance_id => last_instance_id)
when 'none'
  nil
else
  puts "Unknown action: #{vote_for}"
end

