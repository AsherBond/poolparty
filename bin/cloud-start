#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))
require "poolparty"
require "poolpartycl"
o = PoolParty::Optioner.new(ARGV) do |opts, optioner|  
  opts.on('-c cloudname', '--cloud name', 'Start cloud by this name')    { |c| optioner.cloudname c }
end

load_pool(o.spec || Binary.get_existing_spec_location)

@testing = o.testing

@clouds = o.cloudname ? {:cloud => cloud(o.cloudname.downcase.to_sym)} : clouds

@clouds.each do |name, cloud|
  
  with_cloud(cloud, {:testing => @testing}) do
    puts header("Starting cloud")
    puts "#{list_of_running_instances.size} running instances (#{minimum_instances} - #{maximum_instances})"
    if (minimum_instances - list_of_running_instances.size) > 0
      puts "Starting #{minimum_instances - list_of_running_instances.size} instances"    
      if testing
        puts("\tNot launching while in testing mode")
      else
        launch_minimum_number_of_instances
        Kernel.system "cloud provision -n #{name} -c master"
      end
    end  
  end
  
end