#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))
require "poolparty"
require "poolpartycl"
o = PoolParty::Optioner.new(ARGV) do |opts, optioner|  
  opts.on('-c cloudname', '--cloud name', 'Start cloud by this name')    { |c| optioner.cloudname c }
end

load_pool(o.spec || Binary.get_existing_spec_location)

@testing = o.testing

include Remote

if o.cloudname
  @cloud = cloud(o.cloudname.downcase.to_sym)
else
  puts "Cloud name or pool name required. Please specify it with -c name"
  exit(0)
end

with_cloud(@cloud, {:testing => @testing}) do
  puts header("Starting cloud")
  puts "#{list_of_running_instances.size} running instances (#{minimum_instances} - #{maximum_instances})"
  if (minimum_instances - list_of_running_instances.size) > 0
    puts "Starting #{minimum_instances - list_of_running_instances.size} instances"    
    testing ? puts("\tNot launching while in testing mode") : launch_minimum_number_of_instances
  end  
end