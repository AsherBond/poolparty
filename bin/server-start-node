#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))
require "poolparty"
require "poolpartycl"

available_monitors = PoolParty::Monitors.available_monitors
o = PoolParty::Optioner.new(ARGV) do |opts, optioner|
  opts.on('-n name', '--name name', 'Host name')    { |h| optioner.hostname h }
end

load_pool(o.spec || Binary.get_existing_spec_location)

include Remote

@clouds = o.cloudname ? [cloud(o.cloudname.downcase.to_sym)] : clouds
@hostname = o.hostname ? o.hostname : "master"

@clouds.each do |name, cloud|
  
  with_cloud(cloud, {:testing => o.testing, :hostname => @hostname }) do
    # TODO: Change this to be app specfic
    # SECURITY RISK
    append_dir = ::File.join( ::File.dirname(__FILE__), "..", "lib/erlang/messenger" )
    command_line_opts = "-pa #{append_dir}/ebin -sname #{hostname} -setcookie poolparty -detached -heart"
    boot_file = "#{append_dir}/pm_node_rel-0.1"
    
    command = "erl -boot #{boot_file} #{command_line_opts}"
    
    Kernel.system command
  end  
  
end