#!/usr/bin/env ruby
$:.unshift(File.dirname(__FILE__) + "/../lib")
require "poolparty"
require "daemons"
$:.unshift("#{File.dirname(__FILE__)}/../lib/proto/gen-rb")

require "thrift"
require "command_interface"
require "poolparty_constants"
require "poolparty_types"

require 'git-style-binary/command'

class CommandInterfaceHandler
  def run_command(cld, command, argv)
    puts "thrift client connected"
    args = *(argv.split(" "))
    cr = CloudThrift::CloudResponse.new
    cr.name = cld.name
    cr.command = command
    begin
      the_cloud = clouds[cld.name]
      raise Exception.new("Cloud not found") unless the_cloud
    rescue Exception => e
      cr.response = "Error: #{e.inspect}"
      return cr
    end
    cr.response = the_cloud.send(command.to_sym, *args).to_s
    return cr
  end
end

GitStyleBinary.command do
  banner <<-EOS
Usage: #{$0} #{all_options_string}

  Start cloud thrift interface
EOS

  short_desc "Start the cloud thrift interface"
  opt :port, "Start a port", :type => :integer, :default => 11223
  opt :cloud_config, "Cloud to load", :type => :string, :default => "#{File.dirname(__FILE__)}/../examples/simple"

  run do |command|
    
    require command[:cloud_config]
    
    handler = CommandInterfaceHandler.new
    processor = CloudThrift::CommandInterface::Processor.new(handler)
    transport = Thrift::ServerSocket.new( command[:port] )
    transportFactory = Thrift::BufferedTransportFactory.new()
    server = Thrift::SimpleServer.new(processor, transport, transportFactory)

    puts "Starting the cloud server..."
    # Become a daemon
    Daemons.daemonize(:keep_pid_files => true, :dir_mode => :system)
    server.serve()
    puts "done."
    
  end
end