#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))
require "poolparty"
require "poolpartycl"
o = PoolParty::Optioner.new(ARGV) do |opts, optioner|
  opts.on('-c [master|slaves|all]', '--class [master|slave|all]', 'Provision class (default: all)')    { |c| optioner.provision_class c }
  opts.on('-n name', '--name name', 'Listing for cloud name')    { |c| optioner.cloudname c }
end

load_pool(o.spec || Binary.get_existing_spec_location)

@provision_class = o.provision_class || "all"

include Remote

@clouds = o.cloudname ? {:cloud => cloud(o.cloudname.downcase.to_sym)} : clouds

@clouds.each do |name, cloud|
  
  with_cloud(cloud, {:testing => o.testing, :location => @location, :provision_class => @provision_class}) do
    
    provisioning_in_progress
    
    # if provision_class == "slave" || provision_class == "all"
    #   Provisioner.provision_slaves(self, testing)
    # end
    # if provision_class == "master" || provision_class == "all"
      Provisioner.provision_master(self, testing)
    # end
    
    provisioning_complete

    clear_base_directory unless testing
  end    
end