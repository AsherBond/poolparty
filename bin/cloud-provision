#!/usr/bin/env ruby
$:.unshift(File.dirname(__FILE__) + "/../lib")
require "poolparty"
# require "poolpartycl"
require 'git-style-binary/command'

GitStyleBinary.command do  
  version "PoolParty #{$0} command"  
  banner <<-EOS
Usage: #{$0} #{all_options_string}

  combines bootstrap and configures an instance or multiple instances
EOS

  short_desc "combines bootstrap and configures an instance or multiple instances"

  run do |command|    
    @loaded_clouds.each do |cld|
      
      # If an IP or DNS name is given, bootstrap that node, otherwise, bootstrap all running nodes.
      # ::FileUtils.rm_rf "#{Default.tmp_path}/" unless o.testing?
      if cld.nodes.empty?
        puts "No nodes to provision"
      else
        if command[:inst_num]
          vputs "\nConfiguring: #{nodes[o.inst_num]}\n--------------------"
          address = cld.nodes[ command[:inst_num] ]
          ::PoolParty::Provision::BootStrapper.new( address[:ip], :cloud => cld )
          ::PoolParty::Provision::DrConfigure.new( address[:ip], :cloud => cld )
        else
          cld.nodes(:status => "running").each do |address|
            cld.vputs "\nConfiguring: #{address[:ip]}\n--------------------"      
            ::PoolParty::Provision::BootStrapper.new( address[:ip], :cloud => cld )
            ::PoolParty::Provision::DrConfigure.new( address[:ip], :cloud => cld )
            
          end
        end
      end
      
    end    
  end
end