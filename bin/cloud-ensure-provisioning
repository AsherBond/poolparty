#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))
require "poolparty"
require "poolpartycl"

available_monitors = PoolParty::Monitors.available_monitors
o = PoolParty::Optioner.new(ARGV) do |opts, optioner|
  opts.on('-n name', '--name name', 'Host name')    { |h| optioner.hostname h }
  opts.on('-l', '--no-shell', 'No shell') {optioner.noshell true}
end

o.loaded_clouds.each do |cloud|
  
  with_cloud(cloud) do
    
    @nonprovisioned_nodes = list_of_running_instances.map {|a| a.name } - cloud.get_current_nodes
    # @tp = ThreadPool.new(10)
    @nonprovisioned_nodes.each do |node|
      next if node == "master"
      # @tp.process do
        PoolParty::Provisioner.process_clean_reconfigure_for!(node, cloud)
        `cloud-provision -i #{node.gsub(/node/, '')}`
        PoolParty::Provisioner.process_clean_reconfigure_for!(node, cloud)
      # end
    end
    # @tp.join
  end  
  
end