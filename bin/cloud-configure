#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))
require "poolparty"
require "poolpartycl"

o = PoolParty::Optioner.new(ARGV) do |opts, optioner|
  optioner.cloudnames
  # optioner.daemonizeable
end

o.loaded_clouds.each do |cloud|
  
  with_cloud(cloud) do
    
    # hide_output do
      # if provision_class == "master" || provision_class == "all"
      @cl = self
      # daemon ? daemonize {Provisioner.configure_master(@cl, testing)} : Provisioner.configure_master(self, testing)
      verbose ? provisioner_for(master).configure(testing) : hide_output { provisioner_for(master).configure(testing) }
      # end
      # if provision_class == "slave" || provision_class == "all"
      #   Provisioner.configure_slaves(self, testing)
      # end
    # end    
    cleanup_storage_directory unless testing
  end    
end